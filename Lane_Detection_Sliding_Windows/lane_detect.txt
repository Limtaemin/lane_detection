1. cv2.VideoCapture(filename)
설명: 지정한 비디오 파일을 열어 비디오 스트림을 캡처합니다. 
비디오 파일을 읽어 프레임 단위로 처리할 수 있게 합니다.
사용 예: vidcap = cv2.VideoCapture("LaneVideo.mp4")

2. cv2.resize(image, (width, height))
설명: 이미지를 지정된 너비와 높이로 크기를 조정합니다. 
비율을 유지하지 않아도 되므로 이미지의 왜곡이 발생할 수 있습니다.
사용 예: frame = cv2.resize(image, (640, 480))

3. cv2.namedWindow(window_name)
설명: 지정한 이름으로 새 창을 생성합니다. 
이 창에 이미지나 영상을 표시할 수 있습니다.
사용 예: cv2.namedWindow("Trackbars")

4. cv2.createTrackbar(trackbar_name, window_name, value, max_value, callback_function)
설명: 트랙바(슬라이더)를 생성합니다.
사용자가 이 트랙바를 움직여 값을 변경할 수 있습니다. 트랙바의 값이 변경될 때마다 callback_function이 호출됩니다.
사용 예: cv2.createTrackbar("L - H", "Trackbars", 0, 255, nothing)

5. cv2.getTrackbarPos(trackbar_name, window_name)
설명: 특정 트랙바의 현재 위치 값을 가져옵니다.
사용 예: l_h = cv2.getTrackbarPos("L - H", "Trackbars")

6. cv2.circle(image, center, radius, color, thickness)
설명: 지정된 이미지에 원을 그립니다. 
center는 원의 중심 좌표, radius는 원의 반지름, color는 원의 색상, thickness는 원의 두께를 지정합니다.
사용 예: cv2.circle(frame, tl, 5, (0, 0, 255), -1)

7. cv2.getPerspectiveTransform(src_points, dst_points)
설명: 원본 이미지의 4개 지점(src_points)을 대상으로 변환 행렬을 계산하여,
새로운 4개 지점(dst_points)에 대응시킵니다. 이 변환 행렬을 이용해 이미지의 시점을 조정할 수 있습니다.
사용 예: matrix = cv2.getPerspectiveTransform(pts1, pts2)

8. cv2.warpPerspective(image, matrix, dsize)
설명: 주어진 변환 행렬을 사용하여 이미지를 변환합니다. 
주로 시점 변환, 즉 "버드아이 뷰" 같은 효과를 적용할 때 사용합니다.
사용 예: transformed_frame = cv2.warpPerspective(frame, matrix, (640, 480))

9. cv2.cvtColor(image, flag)
설명: 이미지를 색상 공간 간에 변환합니다. 예를 들어, BGR에서 HSV로 변환할 때 사용합니다.
사용 예: hsv_transformed_frame = cv2.cvtColor(transformed_frame, cv2.COLOR_BGR2HSV)

10. cv2.inRange(image, lower_bound, upper_bound)
설명: 이미지에서 지정된 색상 범위 내의 픽셀들을 마스크로 추출합니다.
범위 내에 있는 픽셀은 흰색(255), 범위 밖의 픽셀은 검은색(0)으로 변환된 마스크 이미지를 반환합니다.
사용 예: mask = cv2.inRange(hsv_transformed_frame, lower, upper)

11. cv2.findContours(image, mode, method)
설명: 바이너리 이미지에서 윤곽선을 찾습니다.
mode는 윤곽선 검색 방법을, method는 윤곽선 근사화를 설정합니다.
사용 예: contours, _ = cv2.findContours(img, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

12. cv2.moments(contour)
설명: 윤곽선의 모멘트를 계산합니다. 
모멘트는 윤곽선의 무게중심, 면적 등을 계산하는 데 사용됩니다.
사용 예: M = cv2.moments(contour)

13. cv2.rectangle(image, start_point, end_point, color, thickness)
설명: 이미지에 직사각형을 그립니다. 
start_point는 사각형의 좌측 상단 좌표, end_point는 우측 하단 좌표입니다.
사용 예: cv2.rectangle(msk, (left_base-50, y), (left_base+50, y-40), (255, 255, 255), 2)

14. cv2.imshow(window_name, image)
설명: 특정 창에 이미지를 표시합니다. 창은 cv2.namedWindow로 생성됩니다.
사용 예: cv2.imshow("Original", frame)

15. cv2.waitKey(delay)
설명: 주어진 시간(ms 단위)만큼 키 입력을 대기합니다.
0이면 무한정 대기하고, ESC키(27)를 누르면 루프를 종료하는 데 사용됩니다.
사용 예: if cv2.waitKey(10) == 27:

16. numpy.array([elements])
설명: 주어진 리스트를 numpy 배열로 만듭니다.
이 배열은 수학적 연산 및 행렬 연산에 사용됩니다.
사용 예: lower = np.array([l_h, l_s, l_v])

17. numpy.sum(array, axis)
설명: 배열의 지정된 축을 따라 모든 요소를 더합니다.
예를 들어, 축을 따라 픽셀의 합을 계산할 때 사용됩니다.
사용 예: histogram = np.sum(mask[mask.shape[0]//2:, :], axis=0)

18. numpy.argmax(array)
설명: 배열에서 가장 큰 값의 인덱스를 반환합니다.
히스토그램의 최대값 위치를 찾을 때 사용됩니다.
